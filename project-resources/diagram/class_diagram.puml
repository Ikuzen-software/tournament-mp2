@startuml
interface Participants{
  User[] participants
}

interface Organizer{
  User organizer
}

interface Bracket{
  Match[]
}

class Match{
  +String match_id
  --
  +String player1_id
  +String player2_id
  --
  +String identifier
  +Match_State match_state
  +String score
  +String winner_id
  +String loser_id
}

enum Match_State{
  READY
  NOT_READY
  ONGOING
  COMPLETE
}

enum User_Role{
  ADMIN
  USER
  GUEST
}

class Login{
  String username
  String password
}

enum Tournament_Status{
  NOT_STARTED
  ONGOING
  COMPLETE
  ABORTED
}

class User {
  + String user_id
  --
  + String username
  + String email
  + Date birthdate
  + Date register_date
  + String role
  -- encrypted --
  + String password
}

class Player{
  string player_id
}


class Tournament{
  + String tournament_id
  --
  + String name
  + Int size
  + Date createdAt
  + Date startDate
  + String description
  + String game
  + String format
  + Date startDate
  + Tournament_Status status
  --
  + User[] participants
  + User organizer
  + Bracket bracket
}

User_Role <|-- User
Tournament_Status <|-- Tournament
Participants <|-- Tournament
User <|-- Participants
User <|-- Organizer
User <|-- Login
User <|-- Player
Player <|-- Match
Organizer <|-- Tournament
Bracket <|-- Tournament
Match <|-- Bracket
Match <|-- Match_State
@enduml
